version: "3.9"
services:
  zookeeper:
    image: "zookeeper:3.8.0"
    container_name: zookeeper-docker
    hostname: zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafka_network

  kafka:
    image: "bitnami/kafka:3.3.1"
    container_name: kafka-docker
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,PLAINTEXT_HOST://:9093"  
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://34.30.90.7:9092,PLAINTEXT_HOST://kafka:9093" 
      KAFKA_CFG_ZOOKEEPER_CONNECT: "zookeeper:2181/kafka"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_ADVERTISED_HOST_NAME: "kafka"
    depends_on:
      - zookeeper
    networks:
      - kafka_network

  nifi:
    image: apache/nifi:1.13.1
    container_name: nifi-docker
    ports:
      - 8080:8080
    networks:
      - kafka_network

networks:
  kafka_network:
    driver: bridge



# sudo apt-get update && sudo apt-get install docker.io && sudo apt-get install docker-compose
# sudo docker-compose up -d
# sudo docker exec -it kafka-docker bash
# kafka-topics.sh --create --topic ornek --bootstrap-server localhost:9092
# kafka-topics.sh --create --topic topic_b --bootstrap-server localhost:9092
# kafka-topics.sh --list --bootstrap-server localhost:9092
# kafka-topics.sh --delete --topic ornek --bootstrap-server localhost:9092
# kafka-console-producer.sh --topic ornek --bootstrap-server localhost:9092
# kafka-console-consumer.sh --topic ornek --from-beginning --bootstrap-server localhost:9092

# sudo docker exec -it kafka-docker bash
# kafka-topics.sh --create --topic topic_nifi --bootstrap-server localhost:9092
# kafka-topics.sh --create --topic topic_spark --bootstrap-server localhost:9092
# kafka-console-consumer.sh --topic topic_nifi --from-beginning --bootstrap-server localhost:9092

# conda activate data_engineer

